name: Build check

on:
  pull_request:
    branches:
      - development
      - main
      - production
  workflow_dispatch:
    inputs:
      logLevel:
        description: "Log level"
        required: true
        default: "warning"
      tags:
        description: "Test scenario tags"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout your repository using the latest version
      - name: Check out Git repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0  # Fetch full history to avoid merge-base issues

      # Fetch all branches fully to ensure 'nx affected' works correctly
      - name: Fetch all branches
        run: git fetch origin +refs/heads/*:refs/remotes/origin/*

      # Install Node.js & NPM using the latest setup-node action
      - name: Install Node.js & NPM
        uses: actions/setup-node@v3
        with:
          node-version: "20"  # Ensure Node.js 20 is used

      # Runs npm install
      - name: Install dependencies
        uses: bahmutov/npm-install@v1
        env:
          CYPRESS_INSTALL_BINARY: 0
        with:
          useRollingCache: true
          install-command: npm ci --audit false

      # Extract branch name
      - name: Starting build check
        shell: bash
        run: echo "branch_name=${GITHUB_REF##*/}" >> $GITHUB_ENV
        id: extract_branch

      # Conditional build steps based on the target branch
      - name: Build for main branch
        if: ${{github.event.pull_request.base.ref == 'main'}}
        run: npx nx affected --target=build --base='origin/main' --head=HEAD --configuration=local

      - name: Build for production branch
        if: ${{github.event.pull_request.base.ref == 'production'}}
        run: npx nx affected --target=build --base='origin/production' --head=HEAD --configuration=local

      - name: Build for development branch
        if: ${{github.event.pull_request.base.ref == 'development'}}
        run: npx nx affected --target=build --base='origin/development' --head=HEAD --configuration=local
